{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to SocyMusic! This is the documentation for the Android music player SocyMusic. Check us out on Github Index Information How it started Concept and goals Compatibility Downloads Release download Source code Contributing Pull requests Issues Discussions Translations Design Other Policy License Conventions Contact","title":"Home"},{"location":"#welcome-to-socymusic","text":"This is the documentation for the Android music player SocyMusic. Check us out on Github","title":"Welcome to SocyMusic!"},{"location":"#index","text":"Information How it started Concept and goals Compatibility Downloads Release download Source code Contributing Pull requests Issues Discussions Translations Design Other Policy License Conventions Contact","title":"Index"},{"location":"contributing/","text":"Contributing There are many ways you can contribute to this project. Even if it's just a simple Java app, the contributors are not just limited to developers. One of our first contributors is a designer. Apart from developers, we need writers and translators to write, translate and proofread the docs and in-app texts. We also need designers to create awesome and custom app designs. If you are interested, then just keep reading below and let's hope you find something you can contribute to. Pull requests Pull requests are fundamental for the project to grow. If you find something of the app you would like to improve and you know how to do it or want to make the first step, then this is the type of contribution for you. You will need to fork the repository first, add your change and pull it back up to the main branch. Every pull request will be reviewed in detail and discussed on Github. So please, after you have submitted a pull request, stay with us as we go through the process of reviewing the request. We know that some people are afraid of submitting pull requests because they are afraid of making mistakes. But remember, nobody is perfect, everyone makes mistakes sometimes. If you submit an incorrect pull request we will not yell at you, we will give you detailed feedback on how to improve it and give you the chance of trying again. Here is a step by step guide to submit a pull request successfully: 1. First of all you will need tools to work with. We highly suggest you download Android Studio and Github Desktop . 2. After you have downloaded your tools, now it's time to download the project you will be working on. You can do this by forking the Repository . 3. Now you should have all the files you need on your computer, you can therefore start to change whatever part of the code you want. Please do note that the branch gh-pages cannot be edited! 4. Open Android Studio and import the whole project, then run the build.gradle file. 5. Now all files should be updated and you should be ready to make your changes. 6. Once you are satisfied with your changes and would like to submit them for review, you can simply use the Github Desktop app to upload the files to the repository you forked earlier. 7. You can repeat the step above multiple times with as many changes as you want. Once you are done, you can finally create a pull request for the main project. 8. If you navigate to the repository you can open a new pull request and submit your code 9. Try to be as detailed as possible when describing your change, also try to include external sources you used as a reference if possible. This was a very brief tutorial on how to create a pull request, for a more detailed and beginner-friendly tutorial please visit the Github tutorial directly. Note: The pull requests can have the same labels as issues, refer to them in the section below! Issues Issues are a very important part of the project. Issues are not just bugs, but also suggestions and improvements. If you find something odd in the app, would like to suggest an improvement, or think there is a security vulnerability, you can just use one of the Issue templates and submit your thoughts. One important thing you need to do before submitting your issue is to take a look at the past open and closed issues to avoid creating a duplicate issue. If you find that your issue has already been submitted but you want to add some more detail to it you can always do that, even if the issue is closed. We normally don't lock conversations and therefore everyone can submit his thoughts and request a more detailed explanation if needed. While exploring issues you might be wondering what some labels mean. We usually use the standard Github labels, we don't have custom ones yet. Here is a shortlist: - Bug : Bugs are errors in the app where the app doesn't behave as it should. When this label is applied it means that the issue is related to some sort of malfunctioning of the app. - Enhancement : Enhancements are essentially improvements and suggestions to the app. When this label is applied it means that the person opening the issue would like to request a change in the issue, the issue might or might not have a pull-request assigned where the person already implemented the new feature he/she requested. - Documentation : This label refers to everything that is not directly related to the app, but has to do with the docs. If you want to contribute to this type of issue, you might find the section about Translations below if you interest. - Duplicate : This label means that the issue already exists. When an issue already exists, the existing issue will be mentioned in the issue discussions section and then closed immediately. - Good first issue : This type of issue is great for new contributors. It is mostly an easy-to-do task and therefore great for new people who would like to be part of the contributors of the project. - Help wanted : This label is generally added to an issue that is harder to fix. We are a small team and we can't do everything, sometimes we struggle a lot and if you see an issue like this and know how to fix it you are very welcome to do so. - Question : Do not confuse this label with the one above! This label means that we don't understand your issue and need more information on how to fix it. When we apply this label we also provide some questions in the issue. If you have answers to those questions you can answer them. - Invalid : If we think that the issue is not related to the SocyMusic project or nobody can clarify the issue it will be flagged as invalid and closed after some time. To avoid this, please try to be as detailed as possible while writing issues and remain open to questions we might have. - Wontfix : This is the only label that immediately blocks any development on the issue. It means that whatever got reported or suggested will not be fixed or coded. This happens very rarely, but it might be the case if it somehow breaks the Concept of the app. Discussions Discussions are the best way to communicate on Github. Especially if you are unsure to open an issue about it or not, it's a great place to discuss it. Discussion is also a great place to submit translations or designs. Check out the respective sections below for that. Some categories are locked, which means only administrators or maintainers can create discussions in that category, but people are still able to comment on them. Some categories are completely open, which means everyone can open their discussion in there and comment as they like. And the last type of category is the question and answer one. It's like the completely open one, but the difference is that people will only be able to ask questions and provide answers. There is also the possibility to vote for the best answer. Here is a list of currently existing categories and their purpose: - Announcements : This category is all about telling whoever is reading what has been done. For example, when there is a new release, a discussion for it gets created automatically to allow people to discuss it. It is also used to announce special events or goals that have been reached. - Design : This category is all about your design suggestions. We want to avoid the need for the designers to create issues for their design creations. This also allows us to organize submissions better and for other people to discuss them. Please refer to the section below on how to contribute properly. - General : As the name already suggests, there is no strict rule here. If you think your discussion doesn't fit any of the other categories you are free to submit it here. We mostly use it to communicate with each other about new changes, suggestions, and more. - Ideas : This category is specifically for new suggestions which need approval from the community or further development. The difference between this and creating an issue is that when creating an issue you need to submit as much detail as possible, but in a discussion, you can also just write down your thoughts. - Q&A : Questions and Answer is a special category that should help in solving simple questions which don't require opening an issue. You should only ask questions here and they will be answered with answers that people can vote on. Once the question has been answered, please mark the answer that solves it. - Show and tell : When you made something great you are proud of and would like to share it with the others of the SocyMusic community, this is the place for you. - Translations : If you know any other language than English and would like to submit your translations of the docs or app, this is the place to do it. Please refer to the section below on how to create translation contributions properly. Note: In the Discussions tab, the same labels as the Issues apply! Translations Translations are a very important part of SocyMusic. It helps in making the project available globally. Let's get straight to the point: There are two types of translations, the one in the app and the one in the docs/GitHub repo. App translations: All the texts in the app are in a file called strings.xml . There you will find all the strings you need and you can translate ths\u00f3se into whatever language you want. Please do look into the Translations discussion to avoid duplicate translations submissions. You can also suggest changes to existing translations in the discussions Docs/Github translations: Again, before you submit any translation, check if the language you want to translate into already exists or not by looking in the assigned Translations discussion category. As for the Github repository, you can find all the files you need here , just look for .md files and start translating. For the docs, you can find everything in this folder . To make it easier for you you can use this great free online tool to visualize your text in Markdown in real-time. You can also customize it with emojis and custom formatting, but please add those changes separately so that we can add them to the other versions as well. Design Now you might be thinking, why does a music player need designers? And the answer is customization. The app is completely open-source, created by the community for the community. Therefore the designs are custom. At the moment if you look at the backgrounds, they were made by one of our designers. If you have any suggestions for a new logo, new backgrounds, new colors, etc, you can just submit your great artwork at the Design discussions . We will carefully look at every submission and add them if possible. If you would like to remain anonymous, you can always mail us the design by email following the Contact section.","title":"Contributing"},{"location":"contributing/#contributing","text":"There are many ways you can contribute to this project. Even if it's just a simple Java app, the contributors are not just limited to developers. One of our first contributors is a designer. Apart from developers, we need writers and translators to write, translate and proofread the docs and in-app texts. We also need designers to create awesome and custom app designs. If you are interested, then just keep reading below and let's hope you find something you can contribute to.","title":"Contributing"},{"location":"contributing/#pull-requests","text":"Pull requests are fundamental for the project to grow. If you find something of the app you would like to improve and you know how to do it or want to make the first step, then this is the type of contribution for you. You will need to fork the repository first, add your change and pull it back up to the main branch. Every pull request will be reviewed in detail and discussed on Github. So please, after you have submitted a pull request, stay with us as we go through the process of reviewing the request. We know that some people are afraid of submitting pull requests because they are afraid of making mistakes. But remember, nobody is perfect, everyone makes mistakes sometimes. If you submit an incorrect pull request we will not yell at you, we will give you detailed feedback on how to improve it and give you the chance of trying again. Here is a step by step guide to submit a pull request successfully: 1. First of all you will need tools to work with. We highly suggest you download Android Studio and Github Desktop . 2. After you have downloaded your tools, now it's time to download the project you will be working on. You can do this by forking the Repository . 3. Now you should have all the files you need on your computer, you can therefore start to change whatever part of the code you want. Please do note that the branch gh-pages cannot be edited! 4. Open Android Studio and import the whole project, then run the build.gradle file. 5. Now all files should be updated and you should be ready to make your changes. 6. Once you are satisfied with your changes and would like to submit them for review, you can simply use the Github Desktop app to upload the files to the repository you forked earlier. 7. You can repeat the step above multiple times with as many changes as you want. Once you are done, you can finally create a pull request for the main project. 8. If you navigate to the repository you can open a new pull request and submit your code 9. Try to be as detailed as possible when describing your change, also try to include external sources you used as a reference if possible. This was a very brief tutorial on how to create a pull request, for a more detailed and beginner-friendly tutorial please visit the Github tutorial directly. Note: The pull requests can have the same labels as issues, refer to them in the section below!","title":"Pull requests"},{"location":"contributing/#issues","text":"Issues are a very important part of the project. Issues are not just bugs, but also suggestions and improvements. If you find something odd in the app, would like to suggest an improvement, or think there is a security vulnerability, you can just use one of the Issue templates and submit your thoughts. One important thing you need to do before submitting your issue is to take a look at the past open and closed issues to avoid creating a duplicate issue. If you find that your issue has already been submitted but you want to add some more detail to it you can always do that, even if the issue is closed. We normally don't lock conversations and therefore everyone can submit his thoughts and request a more detailed explanation if needed. While exploring issues you might be wondering what some labels mean. We usually use the standard Github labels, we don't have custom ones yet. Here is a shortlist: - Bug : Bugs are errors in the app where the app doesn't behave as it should. When this label is applied it means that the issue is related to some sort of malfunctioning of the app. - Enhancement : Enhancements are essentially improvements and suggestions to the app. When this label is applied it means that the person opening the issue would like to request a change in the issue, the issue might or might not have a pull-request assigned where the person already implemented the new feature he/she requested. - Documentation : This label refers to everything that is not directly related to the app, but has to do with the docs. If you want to contribute to this type of issue, you might find the section about Translations below if you interest. - Duplicate : This label means that the issue already exists. When an issue already exists, the existing issue will be mentioned in the issue discussions section and then closed immediately. - Good first issue : This type of issue is great for new contributors. It is mostly an easy-to-do task and therefore great for new people who would like to be part of the contributors of the project. - Help wanted : This label is generally added to an issue that is harder to fix. We are a small team and we can't do everything, sometimes we struggle a lot and if you see an issue like this and know how to fix it you are very welcome to do so. - Question : Do not confuse this label with the one above! This label means that we don't understand your issue and need more information on how to fix it. When we apply this label we also provide some questions in the issue. If you have answers to those questions you can answer them. - Invalid : If we think that the issue is not related to the SocyMusic project or nobody can clarify the issue it will be flagged as invalid and closed after some time. To avoid this, please try to be as detailed as possible while writing issues and remain open to questions we might have. - Wontfix : This is the only label that immediately blocks any development on the issue. It means that whatever got reported or suggested will not be fixed or coded. This happens very rarely, but it might be the case if it somehow breaks the Concept of the app.","title":"Issues"},{"location":"contributing/#discussions","text":"Discussions are the best way to communicate on Github. Especially if you are unsure to open an issue about it or not, it's a great place to discuss it. Discussion is also a great place to submit translations or designs. Check out the respective sections below for that. Some categories are locked, which means only administrators or maintainers can create discussions in that category, but people are still able to comment on them. Some categories are completely open, which means everyone can open their discussion in there and comment as they like. And the last type of category is the question and answer one. It's like the completely open one, but the difference is that people will only be able to ask questions and provide answers. There is also the possibility to vote for the best answer. Here is a list of currently existing categories and their purpose: - Announcements : This category is all about telling whoever is reading what has been done. For example, when there is a new release, a discussion for it gets created automatically to allow people to discuss it. It is also used to announce special events or goals that have been reached. - Design : This category is all about your design suggestions. We want to avoid the need for the designers to create issues for their design creations. This also allows us to organize submissions better and for other people to discuss them. Please refer to the section below on how to contribute properly. - General : As the name already suggests, there is no strict rule here. If you think your discussion doesn't fit any of the other categories you are free to submit it here. We mostly use it to communicate with each other about new changes, suggestions, and more. - Ideas : This category is specifically for new suggestions which need approval from the community or further development. The difference between this and creating an issue is that when creating an issue you need to submit as much detail as possible, but in a discussion, you can also just write down your thoughts. - Q&A : Questions and Answer is a special category that should help in solving simple questions which don't require opening an issue. You should only ask questions here and they will be answered with answers that people can vote on. Once the question has been answered, please mark the answer that solves it. - Show and tell : When you made something great you are proud of and would like to share it with the others of the SocyMusic community, this is the place for you. - Translations : If you know any other language than English and would like to submit your translations of the docs or app, this is the place to do it. Please refer to the section below on how to create translation contributions properly. Note: In the Discussions tab, the same labels as the Issues apply!","title":"Discussions"},{"location":"contributing/#translations","text":"Translations are a very important part of SocyMusic. It helps in making the project available globally. Let's get straight to the point: There are two types of translations, the one in the app and the one in the docs/GitHub repo. App translations: All the texts in the app are in a file called strings.xml . There you will find all the strings you need and you can translate ths\u00f3se into whatever language you want. Please do look into the Translations discussion to avoid duplicate translations submissions. You can also suggest changes to existing translations in the discussions Docs/Github translations: Again, before you submit any translation, check if the language you want to translate into already exists or not by looking in the assigned Translations discussion category. As for the Github repository, you can find all the files you need here , just look for .md files and start translating. For the docs, you can find everything in this folder . To make it easier for you you can use this great free online tool to visualize your text in Markdown in real-time. You can also customize it with emojis and custom formatting, but please add those changes separately so that we can add them to the other versions as well.","title":"Translations"},{"location":"contributing/#design","text":"Now you might be thinking, why does a music player need designers? And the answer is customization. The app is completely open-source, created by the community for the community. Therefore the designs are custom. At the moment if you look at the backgrounds, they were made by one of our designers. If you have any suggestions for a new logo, new backgrounds, new colors, etc, you can just submit your great artwork at the Design discussions . We will carefully look at every submission and add them if possible. If you would like to remain anonymous, you can always mail us the design by email following the Contact section.","title":"Design"},{"location":"downloads/","text":"Downloads There are multiple ways of downloading the app, some are easier, some are harder, some are more efficient and some have special benefits. Please note that this section is meant for users, not contributors. If you want to download the project and contribute to it, refer to the contributing section Release download The easiest way to download the app is through the Releases on Github. Before you download anything, make sure the version is the correct one. If you want to download the latest release, download the latest release with a beta tag in it, else download one without it. Beta-releases might not be stable and cause some issues while using, normal releases are better. Here is a step by step tutorial: 1. Go to the Github repository , you should now see something like the image below: 2. Click on the Release tab, it's circled in red in the image above. 3. Now you should be on a page that at the top looks like this: 4. Now just scroll to the end of the post where you will find a section called Assets, like this: 5. Now all you need to do is click on the SocyMusic.apk file and the download will start automatically 6. Now you need to transfer the file to your phone. You can do this by sending the file to yourself or using a cable 7. When on the phone click on it and the download process will start. 8. Congratulations! You have installed SocyMusic. If anything went wrong, please refer to the Contact section Note: Sometimes phones block the installation because they don't recognize the app, you can safely ignore it and continue the download. Source download This is a more advanced method of installing the app. It will require you to have some coding knowledge. Start by going to the Github repository and download the whole source. You could do this with GIT or just download the ZIP file. Please refer to this great guide on how to do it: Instructables . After downloading the project, navigate to the folder where the project is located and use the Gradle Wrapper to build the project. You will need to open the command line and write gradlew assembleDebug to create a .apk file. Now you can just transfer the .apk file to your phone again and install it as usual. Note: Even if you need to build the file from scratch in the source download, it does have the advantage of giving you the newest version of the app possible. This is especially useful if you plan on testing the app .","title":"Downloads"},{"location":"downloads/#downloads","text":"There are multiple ways of downloading the app, some are easier, some are harder, some are more efficient and some have special benefits. Please note that this section is meant for users, not contributors. If you want to download the project and contribute to it, refer to the contributing section","title":"Downloads"},{"location":"downloads/#release-download","text":"The easiest way to download the app is through the Releases on Github. Before you download anything, make sure the version is the correct one. If you want to download the latest release, download the latest release with a beta tag in it, else download one without it. Beta-releases might not be stable and cause some issues while using, normal releases are better. Here is a step by step tutorial: 1. Go to the Github repository , you should now see something like the image below: 2. Click on the Release tab, it's circled in red in the image above. 3. Now you should be on a page that at the top looks like this: 4. Now just scroll to the end of the post where you will find a section called Assets, like this: 5. Now all you need to do is click on the SocyMusic.apk file and the download will start automatically 6. Now you need to transfer the file to your phone. You can do this by sending the file to yourself or using a cable 7. When on the phone click on it and the download process will start. 8. Congratulations! You have installed SocyMusic. If anything went wrong, please refer to the Contact section Note: Sometimes phones block the installation because they don't recognize the app, you can safely ignore it and continue the download.","title":"Release download"},{"location":"downloads/#source-download","text":"This is a more advanced method of installing the app. It will require you to have some coding knowledge. Start by going to the Github repository and download the whole source. You could do this with GIT or just download the ZIP file. Please refer to this great guide on how to do it: Instructables . After downloading the project, navigate to the folder where the project is located and use the Gradle Wrapper to build the project. You will need to open the command line and write gradlew assembleDebug to create a .apk file. Now you can just transfer the .apk file to your phone again and install it as usual. Note: Even if you need to build the file from scratch in the source download, it does have the advantage of giving you the newest version of the app possible. This is especially useful if you plan on testing the app .","title":"Source download"},{"location":"information/","text":"Information How it started It all started with Benji and his school project. His assignment was to create a simple music player completely in Java for Windows using the Swing GUI builder. How well he did is not known, but what we do know is that he got inspired by that one project and decided to improve that one project. He started by rebuilding the whole project on Android, but he still was committed to only use Java in his project. Eventually, he got stuck on issues he wasn't able to resolve. He, therefore, decided to upload the project on Github and start looking for people willing to collaborate. He eventually found some people and as a small group of people started this awesome coding adventure. Here is the current network graph generated by GitGraphJS , you can view the full graph here on Github too: PS: You will need to zoom a lot to see something here, sorry. Concept and goals By concept, we mean the idea behind the app. And the idea behind SocyMusic is not too complicated. SocyMusic has been created with the idea of having a completely offline and open source app based entirely on Java. Another cool feature that we want to implement somewhere in the future is the file-sharing feature. You will then be able to share songs and meanwhile still keep the app 100% offline because the sharing of files would take place over Bluetooth. Here are the goals achieved so far: Goal Description Tag Reached 1. Add project to Github # 24. May 2021 2. First release # 25. May 2021 3. First contribution to the project #5 27. May 2021 4. First contribution from a stranger #16 30. May 2021 5. First official release v1.0 4. June 2021 6. Added notification bar feature #30 6. June 2021 7. Reached 100 commits #38 7. June 2021 8. Made the whole project more friendly by adding comments # 13. June 2021 9. Added naming conventions to the project #85 9. July 2021 10. Solved one of the biggest issues so far #105 17. July 2021 11. Redesigned the app #106 17. July 2021 12. Added new backgrounds and themes #127 25. July 2021 13. Added various templates #142 3. August 2021 14. Added docs #146 5. August 2021 Compatibility The app is compatible with all Android devices which have a minimum of Android 7.0 installed. The app is being compiled in SDK version 30, which is the equivalent of Android version 11, this would be the best option to use the app at its fullest. IOS(iPhone) is not compatible and as of now, there are no plans on actually coding it. Here is a table to show it better: Android Name Version numbers API level Release date compatible No name 1.0 1 September 23, 2008 no No name 1.1 2 February 9, 2009 no Cupcake 1.5 3 April 27, 2009 no Donut 1.6 4 September 15, 2009 no Eclair 2.0 \u2013 2.1 5 \u2013 7 October 26, 2009 no Froyo 2.2 \u2013 2.2.3 8 May 20, 2010 no Gingerbread 2.3 \u2013 2.3.7 9 \u2013 10 December 6, 2010 no Honeycomb 3.0 \u2013 3.2.6 11 \u2013 13 February 22, 2011 no Ice Cream Sandwich 4.0 \u2013 4.0.4 14 \u2013 15 October 18, 2011 no Jelly Bean 4.1 \u2013 4.3.1 16 \u2013 18 July 9, 2012 no KitKat 4.4 \u2013 4.4.4 19 \u2013 20 October 31, 2013 no Lollipop 5.0 \u2013 5.1.1 21- 22 November 12, 2014 no Marshmallow 6.0 \u2013 6.0.1 23 October 5, 2015 no Nougat 7.0 24 August 22, 2016 yes Nougat 7.1.0 \u2013 7.1.2 25 October 4, 2016 yes Oreo 8.0 26 August 21, 2017 yes Oreo 8.1 27 December 5, 2017 yes Pie 9.0 28 August 6, 2018 yes Android 10 (Q) 10.0 29 September 3, 2019 yes Android 11 (R) 11.0 30 September 8, 2020 yes Android 12 (S) 12.0 31 expected to launch later this year probably","title":"Information"},{"location":"information/#information","text":"","title":"Information"},{"location":"information/#how-it-started","text":"It all started with Benji and his school project. His assignment was to create a simple music player completely in Java for Windows using the Swing GUI builder. How well he did is not known, but what we do know is that he got inspired by that one project and decided to improve that one project. He started by rebuilding the whole project on Android, but he still was committed to only use Java in his project. Eventually, he got stuck on issues he wasn't able to resolve. He, therefore, decided to upload the project on Github and start looking for people willing to collaborate. He eventually found some people and as a small group of people started this awesome coding adventure. Here is the current network graph generated by GitGraphJS , you can view the full graph here on Github too: PS: You will need to zoom a lot to see something here, sorry.","title":"How it started"},{"location":"information/#concept-and-goals","text":"By concept, we mean the idea behind the app. And the idea behind SocyMusic is not too complicated. SocyMusic has been created with the idea of having a completely offline and open source app based entirely on Java. Another cool feature that we want to implement somewhere in the future is the file-sharing feature. You will then be able to share songs and meanwhile still keep the app 100% offline because the sharing of files would take place over Bluetooth. Here are the goals achieved so far: Goal Description Tag Reached 1. Add project to Github # 24. May 2021 2. First release # 25. May 2021 3. First contribution to the project #5 27. May 2021 4. First contribution from a stranger #16 30. May 2021 5. First official release v1.0 4. June 2021 6. Added notification bar feature #30 6. June 2021 7. Reached 100 commits #38 7. June 2021 8. Made the whole project more friendly by adding comments # 13. June 2021 9. Added naming conventions to the project #85 9. July 2021 10. Solved one of the biggest issues so far #105 17. July 2021 11. Redesigned the app #106 17. July 2021 12. Added new backgrounds and themes #127 25. July 2021 13. Added various templates #142 3. August 2021 14. Added docs #146 5. August 2021","title":"Concept and goals"},{"location":"information/#compatibility","text":"The app is compatible with all Android devices which have a minimum of Android 7.0 installed. The app is being compiled in SDK version 30, which is the equivalent of Android version 11, this would be the best option to use the app at its fullest. IOS(iPhone) is not compatible and as of now, there are no plans on actually coding it. Here is a table to show it better: Android Name Version numbers API level Release date compatible No name 1.0 1 September 23, 2008 no No name 1.1 2 February 9, 2009 no Cupcake 1.5 3 April 27, 2009 no Donut 1.6 4 September 15, 2009 no Eclair 2.0 \u2013 2.1 5 \u2013 7 October 26, 2009 no Froyo 2.2 \u2013 2.2.3 8 May 20, 2010 no Gingerbread 2.3 \u2013 2.3.7 9 \u2013 10 December 6, 2010 no Honeycomb 3.0 \u2013 3.2.6 11 \u2013 13 February 22, 2011 no Ice Cream Sandwich 4.0 \u2013 4.0.4 14 \u2013 15 October 18, 2011 no Jelly Bean 4.1 \u2013 4.3.1 16 \u2013 18 July 9, 2012 no KitKat 4.4 \u2013 4.4.4 19 \u2013 20 October 31, 2013 no Lollipop 5.0 \u2013 5.1.1 21- 22 November 12, 2014 no Marshmallow 6.0 \u2013 6.0.1 23 October 5, 2015 no Nougat 7.0 24 August 22, 2016 yes Nougat 7.1.0 \u2013 7.1.2 25 October 4, 2016 yes Oreo 8.0 26 August 21, 2017 yes Oreo 8.1 27 December 5, 2017 yes Pie 9.0 28 August 6, 2018 yes Android 10 (Q) 10.0 29 September 3, 2019 yes Android 11 (R) 11.0 30 September 8, 2020 yes Android 12 (S) 12.0 31 expected to launch later this year probably","title":"Compatibility"},{"location":"other/","text":"Other This section is for all the things that didn't make it in other sections, but that could still be useful. Especially check out the bottom of the page where you will find a way to contact us in case you encounter any issues along the way or need a way of direct communication. Policy Policies are a very important part of the project. They regulate how people interact with the project and communicate with each other. For a resume, take a look at the Github community tab . There are a couple of policies you should read through before contributing to the project: - Code of conduct : It regulates how people should behave to make everyone feel welcoming. The code of conduct is not something we invented, but it is something Github enforces, we just adapted ours from Contributor convenant . - Contributing : It's not a policy, but more of a guide on how to contribute properly. This assures that when contributing you have the highest chance possible to get your changes merged or your requests applied right away. - Security : As of now, this still needs further development. It tells you which versions of the app feature security support and which don't. License The whole project is licensed under the GNU Affero General Public License v3.0 . What this license is about exactly is all written here on Github . Please note that the license can be changed in the future, so please check out the link above to make sure you are on the latest license. Conventions As of now, we only have one convention and it's the naming convention. It is especially important for developers because it regulates how new files and resources get named. If you spot files wrongly named, feel free to report them and rename them. We got our naming convention from an answer on Stackoverflow . Here is an image to clarify it better: Contact If you have any issue that you don't want to share with anyone else and would like it to be taken care of privately, you can write an email at: socymusic@gmail.com . The email is managed by the maintainer of the Github project Benji. We will read all your emails and answer them as fast as possible. Any spam or abuse of the email will be banned from ever contacting the email again.","title":"Other"},{"location":"other/#other","text":"This section is for all the things that didn't make it in other sections, but that could still be useful. Especially check out the bottom of the page where you will find a way to contact us in case you encounter any issues along the way or need a way of direct communication.","title":"Other"},{"location":"other/#policy","text":"Policies are a very important part of the project. They regulate how people interact with the project and communicate with each other. For a resume, take a look at the Github community tab . There are a couple of policies you should read through before contributing to the project: - Code of conduct : It regulates how people should behave to make everyone feel welcoming. The code of conduct is not something we invented, but it is something Github enforces, we just adapted ours from Contributor convenant . - Contributing : It's not a policy, but more of a guide on how to contribute properly. This assures that when contributing you have the highest chance possible to get your changes merged or your requests applied right away. - Security : As of now, this still needs further development. It tells you which versions of the app feature security support and which don't.","title":"Policy"},{"location":"other/#license","text":"The whole project is licensed under the GNU Affero General Public License v3.0 . What this license is about exactly is all written here on Github . Please note that the license can be changed in the future, so please check out the link above to make sure you are on the latest license.","title":"License"},{"location":"other/#conventions","text":"As of now, we only have one convention and it's the naming convention. It is especially important for developers because it regulates how new files and resources get named. If you spot files wrongly named, feel free to report them and rename them. We got our naming convention from an answer on Stackoverflow . Here is an image to clarify it better:","title":"Conventions"},{"location":"other/#contact","text":"If you have any issue that you don't want to share with anyone else and would like it to be taken care of privately, you can write an email at: socymusic@gmail.com . The email is managed by the maintainer of the Github project Benji. We will read all your emails and answer them as fast as possible. Any spam or abuse of the email will be banned from ever contacting the email again.","title":"Contact"}]}